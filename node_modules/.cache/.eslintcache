[{"C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\index.js":"1","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\App.js":"2","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\components\\Welcome.js":"3","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\components\\Home.js":"4","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\firebase.js":"5"},{"size":235,"mtime":1663932778216,"results":"6","hashOfConfig":"7"},{"size":524,"mtime":1664569864429,"results":"8","hashOfConfig":"7"},{"size":5517,"mtime":1664582296578,"results":"9","hashOfConfig":"7"},{"size":3194,"mtime":1664624402863,"results":"10","hashOfConfig":"7"},{"size":800,"mtime":1664568990656,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1qp0a9n",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"15"},"C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\index.js",[],[],[],"C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\App.js",[],[],"C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\components\\Welcome.js",["31","32","33","34","35"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Welcome.css\";\r\nimport {\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Welcome() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n    const [registerInformation, setRegisterInformation] = useState({\r\n        email: \"\",\r\n        confirmEmail: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                navigate(\"/Home\");\r\n            }\r\n        });\r\n    }, []);\r\n    const navigate = useNavigate();\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const handleSignIn = () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(() => {\r\n                navigate(\"/Home\");\r\n            })\r\n            .catch((err) => alert(err.message));\r\n    };\r\n    const handleRegister = () => {\r\n        if (\r\n            registerInformation.email != registerInformation.confirmEmail ||\r\n            registerInformation.password != registerInformation.confirmPassword\r\n        ) {\r\n            alert(\"Email or password is not the same!\");\r\n            return;\r\n        }\r\n        createUserWithEmailAndPassword(\r\n            auth,\r\n            registerInformation.email,\r\n            registerInformation.password\r\n        )\r\n            .then(() => {\r\n                navigate(\"/Home\");\r\n            })\r\n            .catch((err) => alert(err.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"welcome\">\r\n            <h1>Todo List</h1>\r\n           <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSBqaZ-DAznjfeQWxmtAPQxtwCiDdd_idGuQ&usqp=CAU\" alt=\"image\" />\r\n            <div className=\"login_register_container\">\r\n                {isRegistering ? (\r\n                    <>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={registerInformation.email}\r\n                            onChange={(e) =>\r\n                                setRegisterInformation({\r\n                                    ...registerInformation,\r\n                                    email: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Confirm email\"\r\n                            value={registerInformation.confirmEmail}\r\n                            onChange={(e) =>\r\n                                setRegisterInformation({\r\n                                    ...registerInformation,\r\n                                    confirmEmail: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={registerInformation.password}\r\n                            onChange={(e) =>\r\n                                setRegisterInformation({\r\n                                    ...registerInformation,\r\n                                    password: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={registerInformation.confirmPassword}\r\n                            onChange={(e) =>\r\n                                setRegisterInformation({\r\n                                    ...registerInformation,\r\n                                    confirmPassword: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n\r\n                        <button id=\"button1\" onClick={handleRegister}>Register</button>\r\n                        <button id=\"button2\" onClick={() => setIsRegistering(false)}>\r\n                            go back\r\n                        </button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={handleEmailChange}\r\n                            value={email}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handlePasswordChange}\r\n                            value={password}\r\n                        />\r\n                        <button id=\"button1\" onClick={handleSignIn}>Sign in</button>\r\n                        <button id=\"button2\" onClick={() => setIsRegistering(true)}>\r\n                            Create an account\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;\r\n","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\components\\Home.js",["36","37","38"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth, db } from \"../firebase.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { uid } from \"uid\";\r\nimport { set, ref, onValue, remove, update } from \"firebase/database\";\r\nimport \"./Home.css\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nexport default function Home() {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [tempUidd, setTempUidd] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // read\r\n        onValue(ref(db, `/${auth.currentUser.uid}`), (snapshot) => {\r\n          setTodos([]);\r\n          const data = snapshot.val();\r\n          if (data !== null) {\r\n            Object.values(data).map((todo) => {\r\n              setTodos((oldArray) => [...oldArray, todo]);\r\n            });\r\n          }\r\n        });\r\n      } else if (!user) {\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSignOut = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n\r\n  // add\r\n  const writeToDatabase = () => {\r\n    const uidd = uid();\r\n    set(ref(db, `/${auth.currentUser.uid}/${uidd}`), {\r\n      todo: todo,\r\n      uidd: uidd\r\n    });\r\n\r\n    setTodo(\"\");\r\n  };\r\n\r\n  // update\r\n  const handleUpdate = (todo) => {\r\n    setIsEdit(true);\r\n    setTodo(todo.todo);\r\n    setTempUidd(todo.uidd);\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    update(ref(db, `/${auth.currentUser.uid}/${tempUidd}`), {\r\n      todo: todo,\r\n      tempUidd: tempUidd\r\n    });\r\n\r\n    setTodo(\"\");\r\n    setIsEdit(false);\r\n  };\r\n\r\n  // delete\r\n  const handleDelete = (uid) => {\r\n    remove(ref(db, `/${auth.currentUser.uid}/${uid}`));\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <input\r\n        className=\"add-edit-input\"\r\n        type=\"text\"\r\n        placeholder=\"Add todos...\"\r\n        value={todo}\r\n        onChange={(e) => setTodo(e.target.value)}\r\n      />\r\n\r\n      {todos.map((todo) => (\r\n        <div className=\"todo\">\r\n          <h1>{todo.todo}</h1>\r\n          <EditIcon\r\n            fontSize=\"large\"\r\n            onClick={() => handleUpdate(todo)}\r\n            className=\"edit-button\"\r\n          />\r\n          <DeleteIcon\r\n            fontSize=\"large\"\r\n            onClick={() => handleDelete(todo.uidd)}\r\n            className=\"delete-button\"\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {isEdit ? (\r\n        <div>\r\n        <CheckIcon onClick={handleEditConfirm} className=\"add-confirm-icon\"/>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <AddIcon onClick={writeToDatabase} className=\"add-confirm-icon\" />\r\n        </div>\r\n      )}\r\n        <LogoutIcon onClick={handleSignOut} className=\"logout-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\More\\Desktop\\project1\\Todo\\todoapp\\src\\firebase.js",["39"],[],"import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAzhARVn89hEMiBED7DCggRpN3PL6N6jZQ\",\r\n    authDomain: \"todo-list-f0a3c.firebaseapp.com\",\r\n    databaseURL: \"https://todo-list-f0a3c-default-rtdb.firebaseio.com\",\r\n    projectId: \"todo-list-f0a3c\",\r\n    storageBucket: \"todo-list-f0a3c.appspot.com\",\r\n    messagingSenderId: \"534530284895\",\r\n    appId: \"1:534530284895:web:3bd3cbdd9bcfdafa5baaea\",\r\n    measurementId: \"G-6Z45E49J2V\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const db = getDatabase(app);\r\nexport const auth = getAuth();\r\n",{"ruleId":"40","severity":1,"message":"41","line":5,"column":5,"nodeType":"42","messageId":"43","endLine":5,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":28,"column":8,"nodeType":"46","endLine":28,"endColumn":10,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":47,"column":39,"nodeType":"50","messageId":"51","endLine":47,"endColumn":41},{"ruleId":"48","severity":1,"message":"49","line":48,"column":42,"nodeType":"50","messageId":"51","endLine":48,"endColumn":44},{"ruleId":"52","severity":1,"message":"53","line":67,"column":12,"nodeType":"54","endLine":67,"endColumn":137},{"ruleId":"40","severity":1,"message":"41","line":2,"column":19,"nodeType":"42","messageId":"43","endLine":2,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":29,"column":44,"nodeType":"57","messageId":"58","endLine":29,"endColumn":46},{"ruleId":"44","severity":1,"message":"45","line":38,"column":6,"nodeType":"46","endLine":38,"endColumn":8,"suggestions":"59"},{"ruleId":"40","severity":1,"message":"60","line":19,"column":7,"nodeType":"42","messageId":"43","endLine":19,"endColumn":16},"no-unused-vars","'onAuthStateChanged' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["61"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["62"],"'analytics' is assigned a value but never used.",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [navigate]",{"range":"66","text":"67"},{"range":"68","text":"67"},[826,828],"[navigate]",[1333,1335]]